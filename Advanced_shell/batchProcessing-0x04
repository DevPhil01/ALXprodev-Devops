#!/bin/bash

# Directory to store Pokémon data
data_dir="pokemon_data_parallel"
mkdir -p "$data_dir"

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# File to store errors
error_log="parallel_errors.log"
> "$error_log"

echo "Starting parallel Pokémon data fetch..."

# Function to fetch Pokémon data
fetch_pokemon() {
    pokemon="$1"
    echo "Fetching data for $pokemon..."
    curl -s -o "$data_dir/$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon"
    if [ $? -eq 0 ]; then
        echo "Saved data to $data_dir/$pokemon.json ✅"
    else
        echo "❌ Failed to fetch data for $pokemon" >> "$error_log"
    fi
}

# Start background fetches and record their PIDs
pids=()
for pokemon in "${pokemon_list[@]}"; do
    fetch_pokemon "$pokemon" &
    pids+=($!)
done

# Give all processes 10 seconds to complete
sleep 10

# Check each process and kill if still running
for pid in "${pids[@]}"; do
    if kill -0 "$pid" 2>/dev/null; then
        echo "⏱️  Process $pid is taking too long — terminating..."
        kill "$pid"
    fi
done

# Wait for all background jobs to finish or be killed
wait

echo "✅ Parallel batch processing complete!"

