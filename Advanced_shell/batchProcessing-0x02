#!/bin/bash

# Directory to store JSON files
data_dir="pokemon_data"
mkdir -p "$data_dir"

# List of Pokémon to fetch
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# Log file for errors
error_log="fetch_errors.log"
> "$error_log"  # Clear previous log content

# Loop through each Pokémon
for pokemon in "${pokemon_list[@]}"; do
    echo "Fetching data for $pokemon..."

    # Initialize attempt counter
    attempt=1
    success=false

    # Retry up to 3 times
    while [ $attempt -le 3 ]; do
        # Fetch data
        response=$(curl -s -w "%{http_code}" -o "$data_dir/$pokemon.json" "https://pokeapi.co/api/v2/pokemon/$pokemon")

        # Extract the HTTP status code
        status_code="${response:(-3)}"

        # Check if successful (status code 200)
        if [ "$status_code" -eq 200 ]; then
            echo "Saved data to $data_dir/$pokemon.json ✅"
            success=true
            break
        else
            echo "Attempt $attempt failed for $pokemon (HTTP $status_code)"
            ((attempt++))
            sleep 2  # Wait before retrying
        fi
    done

    # If all 3 attempts failed, log the error
    if [ "$success" = false ]; then
        echo "❌ Failed to fetch data for $pokemon after 3 attempts" | tee -a "$error_log"
        rm -f "$data_dir/$pokemon.json"  # Remove any incomplete file
    fi

    echo ""  # Line break for readability
done

# Final message
echo "All Pokémon processed!"
if [ -s "$error_log" ]; then
    echo "Some errors were logged in $error_log"
else
    echo "No errors encountered."
fi

